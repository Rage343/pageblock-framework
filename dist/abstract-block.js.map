{"version":3,"sources":["abstract-block.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA8BqB;;;;;;;AAMjB,iBANiB,aAMjB,CAAY,IAAZ,EAAkB,KAAlB,EAAyB,IAAzB,EAA+B;kCANd,eAMc;;AAC3B,mBAAO,QAAQ,OAAR,CADoB;;AAG3B,iBAAK,IAAL,GAAY,IAAZ,CAH2B;AAI3B,iBAAK,KAAL,GAAa,KAAb,CAJ2B;AAK3B,iBAAK,EAAL,GAAU,MAAM,CAAN,EAAS,EAAT,CALiB;AAM3B,iBAAK,IAAL,GAAY,IAAZ,CAN2B;AAO3B,iBAAK,gBAAL,GAAwB,wBAAS,iBAAE,KAAF,CAAQ,KAAK,QAAL,EAAe,IAAvB,CAAT,EAAuC,EAAvC,EAA2C,KAA3C,CAAxB,CAP2B;;AAS3B,oBAAQ,GAAR,CAAY,iBAAiB,IAAjB,CAAZ,CAT2B;;AAW3B,iBAAK,IAAL,GAX2B;AAY3B,iBAAK,UAAL,GAZ2B;SAA/B;;qBANiB;;mCAqBV;;;yCAIK;AACR,qBAAK,KAAL,CAAW,aAAX,CAAyB;AACrB,8BAAU,iBAAE,KAAF,CAAQ,KAAK,MAAL,EAAa,IAArB,CAAV;AACA,gCAAY,IAAZ;iBAFJ,EADQ;;AAMR,uBAAO,gBAAP,CAAwB,QAAxB,EAAkC,KAAK,gBAAL,CAAlC,CANQ;;;;sCASF;AACN,qBAAK,aAAL,GADM;;;;4CAIK;AACX,uBAAO,mBAAP,CAA2B,QAA3B,EAAqC,KAAK,gBAAL,CAArC,CADW;;;;uCAIJ;AACP,wBAAQ,GAAR,CAAY,aAAa,KAAK,EAAL,CAAzB,CADO;;;;0CAUE;;;eApDI","file":"abstract-block.js","sourcesContent":["/**\n * Copyright Â© 2016, Ambroise Maupate\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is furnished\n * to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n *\n * @file abstract-block.js\n * @author Ambroise Maupate\n */\nimport waitForImages from \"waitForImages\";\nimport $ from \"jquery\";\n\nimport debounce from \"utils/debounce\";\n\n\nexport default class AbstractBlock {\n    /**\n     * @param  {AbstractPage} page\n     * @param  {String} id\n     * @param  {String} type\n     */\n    constructor(page, $cont, type) {\n        type = type || 'block';\n\n        this.page = page;\n        this.$cont = $cont;\n        this.id = $cont[0].id;\n        this.type = type;\n        this.onResizeDebounce = debounce($.proxy(this.onResize, this), 50, false);\n\n        console.log('new block : ' + type);\n\n        this.init();\n        this.initEvents();\n    }\n\n    init() {\n\n    }\n\n    initEvents(){\n        this.$cont.waitForImages({\n            finished: $.proxy(this.onLoad, this),\n            waitForAll: true\n        });\n\n        window.addEventListener('resize', this.onResizeDebounce);\n    }\n\n    destroy() {\n        this.destroyEvents();\n    }\n\n    destroyEvents(){\n        window.removeEventListener('resize', this.onResizeDebounce);\n    }\n\n    onResize() {\n        console.log('resize :' + this.id);\n    }\n\n    /**\n     * onMapsReady.\n     *\n     * This method must be dispatched by Base.initMaps callback\n     * method.\n     */\n    onMapsReady(){\n\n    }\n}\n"],"sourceRoot":"/source/"}